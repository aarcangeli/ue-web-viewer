// This file is generated by `extract_custom_versions.py`.
// Do not edit manually.
// noinspection JSUnusedGlobalSymbols
//

import { VersionDetails, CustomVersionGuid } from "../CustomVersionGuid";
import { FGuid } from "../../modules/CoreUObject/structs/Guid";

export enum FNiagaraCustomVersion {
  // region Introduced with UE 4.20.0
  /// Before any version changes were made in niagara
  BeforeCustomVersionWasAdded = 0,
  /// Reworked vm external function binding to be more robust.
  VMExternalFunctionBindingRework = 1,
  /// Making all Niagara files reference the version number, allowing post loading recompilation if necessary.
  PostLoadCompilationEnabled = 2,
  /// Moved some runtime cost from external functions into the binding step and used variadic templates to neaten that code greatly.
  VMExternalFunctionBindingReworkPartDeux = 3,
  /// Moved per instance data needed for certain data interfaces out to it's own struct.
  DataInterfacePerInstanceRework = 4,
  /// Added shader maps and corresponding infrastructure
  NiagaraShaderMaps = 5,
  /// Combined Spawn, Update, and Event scripts into one graph.
  UpdateSpawnEventGraphCombination = 6,
  /// Reworked data layout to store float and int data separately.
  DataSetLayoutRework = 7,
  /// Reworked scripts to support emitter & system scripts
  AddedEmitterAndSystemScripts = 8,
  /// Rework of script execution contexts to allow better reuse and reduce overhead of parameter handling.
  ScriptExecutionContextRework = 9,
  /// Removed the Niagara variable ID's making hookup impossible until next compile
  RemovalOfNiagaraVariableIDs = 10,
  /// System and emitter script simulations.
  SystemEmitterScriptSimulations = 11,
  /// Adding integer random to VM. TODO: The vm really needs its own versioning system that will force a recompile when changes.
  IntegerRandom = 12,
  /// Added emitter spawn attributes
  AddedEmitterSpawnAttributes = 13,
  /// cooking of shader maps and corresponding infrastructure
  NiagaraShaderMapCooking = 14,
  NiagaraShaderMapCooking2 = 15,
  /// Added script rapid iteration variables, usually top-level module parameters...
  AddedScriptRapidIterationVariables = 16,
  /// Added type to data interface infos
  AddedTypeToDataInterfaceInfos = 17,
  /// Hooked up autogenerated default values for function call nodes.
  EnabledAutogeneratedDefaultValuesForFunctionCallNodes = 18,
  /// Now curve data interfaces have look-up tables on by default.
  CurveLUTNowOnByDefault = 19,
  /// Scripts now use a guid for identification instead of an index when there are more than one with the same usage.
  ScriptsNowUseAGuidForIdentificationInsteadOfAnIndex = 20,
  NiagaraCombinedGPUSpawnUpdate = 21,
  /// don't serialize shader maps for update scripts
  DontCompileGPUWhenNotNeeded = 22,
  /// don't serialize shader maps for emitters that don't run on gpu.
  LifeCycleRework = 23,
  NowSerializingReadWriteDataSets = 24,
  /// We weren't serializing event data sets previously.
  TranslatorClearOutBetweenEmitters = 25,
  /// Forcing the internal parameter map vars to be reset between emitter calls.
  AddSamplerDataInterfaceParams = 26,
  /// added sampler shader params based on DI buffer descriptors
  GPUShadersForceRecompileNeeded = 27,
  /// Need to force the GPU shaders to recompile
  PlaybackRangeStoredOnSystem = 28,
  /// The playback range for the timeline is now stored in the system editor data.
  MovedToDerivedDataCache = 29,
  /// All cached values will auto-recompile.
  DataInterfacesNotAllocated = 30,
  /// Data interfaces are preallocated
  EmittersHaveGenericUniqueNames = 31,
  /// emitter scripts are built using "Emitter." instead of the full name.
  MovingTranslatorVersionToGuid = 32,
  /// no longer have compiler version enum value in this list, instead moved to a guid, which works better for the DDC
  AddingParamMapToDataSetBaseNode = 33,
  /// adding a parameter map in/out to the data set base node
  DataInterfaceComputeShaderParamRefactor = 34,
  /// refactor of CS parameters allowing regular params as well as buffers.
  CurveLUTRegen = 35,
  /// bumping version and forcing curves to regen their LUT on version change.
  AssignmentNodeUsesBeginDefaults = 36,
  /// Changing the graph generation for assignment nodes so that it uses a "Begin Defaults" node where appropriate.
  AssignmentNodeHasCorrectUsageBitmask = 37,
  /// Updating the usage flage bitmask for assignment nodes to match the part of the stack it's used in.
  EmitterLocalSpaceLiteralConstant = 38,
  // endregion

  // region Introduced with UE 4.21.0
  /// Emitter local space is compiled into the hlsl as a literal constant to expose it to emitter scripts and allow for some better optimization of particle transforms.
  TextureDataInterfaceUsesCustomSerialize = 39,
  /// The cpu cache of the texture is now directly serialized instead of using array property serialization.
  TextureDataInterfaceSizeSerialize = 40,
  /// The texture data interface now streams size info
  SkelMeshInterfaceAPIImprovements = 41,
  // endregion

  // region Introduced with UE 4.23.0
  /// API to skeletal mesh interface was improved but requires a recompile and some graph fixup.
  ImproveLoadTimeFixupOfOpAddPins = 42,
  /// Only do op add pin fixup on existing nodes which are before this version
  MoveCommonInputMetadataToProperties = 43,
  /// Moved commonly used input metadata out of the strin/string property metadata map to actual properties on the metadata struct.
  UseHashesToIdentifyCompileStateOfTopLevelScripts = 44,
  /// Move to using the traversed graph hash and the base script id for the FNiagaraVMExecutableDataId instead of the change id guid to prevent invalidating the DDC.
  MetaDataAndParametersUpdate = 45,
  /// Reworked how the metadata is stored in NiagaraGraph from storing a Map of FNiagaraVariableMetaData to storing a map of UNiagaraScriptVariable* to be used with the Details panel.
  MoveInheritanceDataFromTheEmitterHandleToTheEmitter = 46,
  /// Moved the emitter inheritance data from the emitter handle to the emitter to allow for chained emitter inheritance.
  AddLibraryAssetProperty = 47,
  // endregion

  // region Introduced with UE 4.24.0
  /// Add property to all Niagara scripts indicating whether or not they belong to the library
  AddAdditionalDefinesProperty = 48,
  /// Addding additional defines to the GPU script
  RemoveGraphUsageCompileIds = 49,
  /// Remove the random compile id guids from the cached script usage and from the compile and script ids since the hashes serve the same purpose and are deterministic.
  AddRIAndDetailLevel = 50,
  /// Adding UseRapidIterationParams and DetailLevelMask to the GPU script
  ChangeEmitterCompiledDataToSharedRefs = 51,
  /// Changing the system and emitter compiled data to shared pointers to deal with lifetime issues in the editor.  They now are handled directly in system serialize.
  DisableSortingByDefault = 52,
  // endregion

  // region Introduced with UE 4.25.0
  /// Sorting on Renderers is disabled by default, we add a version to maintain existing systems that expected sorting to be enabled
  MemorySaving = 53,
  /// Convert TMap into TArray to save memory, TMap contains an inline allocator which pushes the size to 80 bytes
  AddSimulationStageUsageEnum = 54,
  /// Added a new value to the script usage enum, and we need a custom version to fix the existing bitfields.
  AddGeneratedFunctionsToGPUParamInfo = 55,
  /// Save the functions generated by a GPU data interface inside FNiagaraDataInterfaceGPUParamInfo
  PlatformScalingRefactor = 56,
  /// Removed DetailLevel in favor of FNiagaraPlatfomSet based selection of per platform settings.
  PrecompileNamespaceFixup = 57,
  /// Promote parameters used across script executions to the Dataset, and Demote unused parameters.
  FixNullScriptVariables = 58,
  /// Postload fixup in UNiagaraGraph to fixup VariableToScriptVariable map entries being null.
  PrecompileNamespaceFixup2 = 59,
  /// Move FNiagaraVariableMetaData from storing scope enum to storing registered scope name.
  SimulationStageInUsageBitmask = 60,
  /// Enable the simulation stage flag by default in the usage bitmask of modules and functions
  StandardizeParameterNames = 61,
  // endregion

  // region Introduced with UE 4.26.0
  /// Fix graph parameter map parameters on post load so that they all have a consisten parsable format and update the UI to show and filter based on these formats.
  ComponentsOnlyHaveUserVariables = 62,
  /// Make sure that UNiagaraComponents only have override maps for User variables.
  RibbonRendererUVRefactor = 63,
  /// Refactor the options for UV settings on the ribbon renderer.
  VariablesUseTypeDefRegistry = 64,
  /// Replace the TypeDefinition in VariableBase with an index into the type registry
  AddLibraryVisibilityProperty = 65,
  /// Expand the visibility options of the scripts to be able to hide a script completely from the user
  SignificanceHandlers = 66,
  // endregion

  // region Introduced with UE 4.27.0
  ModuleVersioning = 67,
  /// Added support for multiple versions of script data
  MoveDefaultValueFromFNiagaraVariableMetaDataToUNiagaraScriptVariable = 68,
  // endregion

  // region Introduced with UE 5.0.0
  ChangeSystemDeterministicDefault = 69,
  /// Changed the default mode from deterministic to non-deterministic which matches emitters
  StaticSwitchFunctionPinsUsePersistentGuids = 70,
  // endregion

  // region Introduced with UE 5.1.0
  /// Update static switch pins to use the PersistentId from their script variable so that when they're renamed their values aren't lost when reallocating pins.
  VisibilityCullingImprovements = 71,
  /// Extended visibility culling options and moved properties into their own struct.
  AddBakerCameraBookmarks = 72,
  PopulateFunctionCallNodePinNameBindings = 73,
  /// Function call node refresh from external changes has been refactored so that they don't need to populate their name bindings every load.
  ComponentRendererSpawnProperty = 74,
  /// Changed the default value for the component renderer's OnlyCreateComponentsOnParticleSpawn property
  RepopulateFunctionCallNodePinNameBindings = 75,
  /// Previous repopulate didn't handle module attributes like Particles.Module.Name so they need to be repopulated for renaming to work correctly.
  EventSpawnsUpdateInitialAttributeValues = 76,
  // endregion

  // region Introduced with UE 5.2.0
  /// Event spawns now optionally update Initial. attribute values. New default is true but old data is kept false to maintain existing behavior.
  AddVariadicParametersToGPUFunctionInfo = 77,
  /// Adds list of variadic parameters to the information about GPU functions.
  DynamicPinNodeFixup = 78,
  // endregion

  // region Introduced with UE 5.3.0
  /// Some data fixup for NiagaraNodeWithDynamicPins.
  RibbonRendererLinkOrderDefaultIsUniqueID = 79,
  // endregion

  // region Introduced with UE 5.4.0
  /// Ribbon renderer will default to unique ID rather than normalized age to make more things 'just work'
  SubImageBlendEnabledByDefault = 80,
  /// Renderer SubImage Blends are enabled by default
  RibbonPlaneUseGeometryNormals = 81,
  /// Ribbon renderer will use geometry normals by default rather than screen / facing aligned normals
  InitialOwnerVelocityFromActor = 82,
  /// Actors velocity is used for the initial velocity before the component has any tracking, old assets use the old zero velocity
  ParameterBindingWithValueRenameFixup = 83,
  /// FNiagaraParameterBindingWithValue wouldn't necessarily have the appropriate ResolvedParameter namespace when it comes to emitter merging
  SimCache_BulkDataVersion1 = 84,
  /// Sim Cache moved to bulk data by default
  InheritanceUxRefactor = 85,
  /// Decoupling of 'Template' and 'Inheritance'
  NDCSpawnGroupOverrideDisabledByDefault = 86,
  // endregion

  // region Introduced with UE 5.5.0
  /// NDC Read DIs will not override spawn group by default when spawning particles. Old content will remain unchanged.
  CustomSortingBindingToAge = 87,
  /// Before it was normalized age which can introduce flickering with sorting and random lifetimes
  StatelessInitialMeshOrientationV1 = 88,
  /// Update Initial Mesh Orientation Module
  HierarchyEditorScriptSupport = 89,
  /// Hierarchy Editor was implemented
  EmitterStateAddLoopDelayEnabled = 90,
  // endregion

  // region Introduced with UE 5.6.0
  /// Added loop delay enabled to emitter state
  SerializeUsageBitMaskToGPUFunctionInfo = 91,
  /// Make sure that we serialize the UsageBitMask with the GPUFunctionInfo
  AddedNewInterpolatedSpawnMode = 92,
  // endregion
}

export const FNiagaraCustomVersionDetails: VersionDetails[] = [
  new VersionDetails({
    name: "BeforeCustomVersionWasAdded",
    comment: "Before any version changes were made in niagara",
    value: 0,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "VMExternalFunctionBindingRework",
    comment: "Reworked vm external function binding to be more robust.",
    value: 1,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "PostLoadCompilationEnabled",
    comment: "Making all Niagara files reference the version number, allowing post loading recompilation if necessary.",
    value: 2,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "VMExternalFunctionBindingReworkPartDeux",
    comment:
      "Moved some runtime cost from external functions into the binding step and used variadic templates to neaten that code greatly.",
    value: 3,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "DataInterfacePerInstanceRework",
    comment: "Moved per instance data needed for certain data interfaces out to it's own struct.",
    value: 4,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "NiagaraShaderMaps",
    comment: "Added shader maps and corresponding infrastructure",
    value: 5,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "UpdateSpawnEventGraphCombination",
    comment: "Combined Spawn, Update, and Event scripts into one graph.",
    value: 6,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "DataSetLayoutRework",
    comment: "Reworked data layout to store float and int data separately.",
    value: 7,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddedEmitterAndSystemScripts",
    comment: "Reworked scripts to support emitter & system scripts",
    value: 8,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "ScriptExecutionContextRework",
    comment: "Rework of script execution contexts to allow better reuse and reduce overhead of parameter handling. ",
    value: 9,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "RemovalOfNiagaraVariableIDs",
    comment: "Removed the Niagara variable ID's making hookup impossible until next compile",
    value: 10,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "SystemEmitterScriptSimulations",
    comment: "System and emitter script simulations.",
    value: 11,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "IntegerRandom",
    comment:
      "Adding integer random to VM. TODO: The vm really needs its own versioning system that will force a recompile when changes.",
    value: 12,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddedEmitterSpawnAttributes",
    comment: "Added emitter spawn attributes",
    value: 13,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "NiagaraShaderMapCooking",
    comment: "cooking of shader maps and corresponding infrastructure",
    value: 14,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "NiagaraShaderMapCooking2",
    value: 15,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddedScriptRapidIterationVariables",
    comment: "Added script rapid iteration variables, usually top-level module parameters...",
    value: 16,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddedTypeToDataInterfaceInfos",
    comment: "Added type to data interface infos",
    value: 17,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "EnabledAutogeneratedDefaultValuesForFunctionCallNodes",
    comment: "Hooked up autogenerated default values for function call nodes.",
    value: 18,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "CurveLUTNowOnByDefault",
    comment: "Now curve data interfaces have look-up tables on by default.",
    value: 19,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "ScriptsNowUseAGuidForIdentificationInsteadOfAnIndex",
    comment:
      "Scripts now use a guid for identification instead of an index when there are more than one with the same usage.",
    value: 20,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "NiagaraCombinedGPUSpawnUpdate",
    value: 21,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "DontCompileGPUWhenNotNeeded",
    comment: "don't serialize shader maps for update scripts",
    value: 22,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "LifeCycleRework",
    comment: "don't serialize shader maps for emitters that don't run on gpu.",
    value: 23,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "NowSerializingReadWriteDataSets",
    value: 24,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "TranslatorClearOutBetweenEmitters",
    comment: "We weren't serializing event data sets previously.",
    value: 25,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddSamplerDataInterfaceParams",
    comment: "Forcing the internal parameter map vars to be reset between emitter calls.",
    value: 26,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "GPUShadersForceRecompileNeeded",
    comment: "added sampler shader params based on DI buffer descriptors",
    value: 27,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "PlaybackRangeStoredOnSystem",
    comment: "Need to force the GPU shaders to recompile",
    value: 28,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "MovedToDerivedDataCache",
    comment: "The playback range for the timeline is now stored in the system editor data.",
    value: 29,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "DataInterfacesNotAllocated",
    comment: "All cached values will auto-recompile.",
    value: 30,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "EmittersHaveGenericUniqueNames",
    comment: "Data interfaces are preallocated",
    value: 31,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "MovingTranslatorVersionToGuid",
    comment: 'emitter scripts are built using "Emitter." instead of the full name.',
    value: 32,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AddingParamMapToDataSetBaseNode",
    comment:
      "no longer have compiler version enum value in this list, instead moved to a guid, which works better for the DDC",
    value: 33,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "DataInterfaceComputeShaderParamRefactor",
    comment: "adding a parameter map in/out to the data set base node",
    value: 34,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "CurveLUTRegen",
    comment: "refactor of CS parameters allowing regular params as well as buffers.",
    value: 35,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AssignmentNodeUsesBeginDefaults",
    comment: "bumping version and forcing curves to regen their LUT on version change.",
    value: 36,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "AssignmentNodeHasCorrectUsageBitmask",
    comment:
      'Changing the graph generation for assignment nodes so that it uses a "Begin Defaults" node where appropriate.',
    value: 37,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "EmitterLocalSpaceLiteralConstant",
    comment: "Updating the usage flage bitmask for assignment nodes to match the part of the stack it's used in.",
    value: 38,
    firstAppearance: "4.20.0",
  }),
  new VersionDetails({
    name: "TextureDataInterfaceUsesCustomSerialize",
    comment:
      "Emitter local space is compiled into the hlsl as a literal constant to expose it to emitter scripts and allow for some better optimization of particle transforms.",
    value: 39,
    firstAppearance: "4.21.0",
  }),
  new VersionDetails({
    name: "TextureDataInterfaceSizeSerialize",
    comment: "The cpu cache of the texture is now directly serialized instead of using array property serialization.",
    value: 40,
    firstAppearance: "4.21.0",
  }),
  new VersionDetails({
    name: "SkelMeshInterfaceAPIImprovements",
    comment: "The texture data interface now streams size info",
    value: 41,
    firstAppearance: "4.21.0",
  }),
  new VersionDetails({
    name: "ImproveLoadTimeFixupOfOpAddPins",
    comment: "API to skeletal mesh interface was improved but requires a recompile and some graph fixup.",
    value: 42,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "MoveCommonInputMetadataToProperties",
    comment: "Only do op add pin fixup on existing nodes which are before this version",
    value: 43,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "UseHashesToIdentifyCompileStateOfTopLevelScripts",
    comment:
      "Moved commonly used input metadata out of the strin/string property metadata map to actual properties on the metadata struct.",
    value: 44,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "MetaDataAndParametersUpdate",
    comment:
      "Move to using the traversed graph hash and the base script id for the FNiagaraVMExecutableDataId instead of the change id guid to prevent invalidating the DDC.",
    value: 45,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "MoveInheritanceDataFromTheEmitterHandleToTheEmitter",
    comment:
      "Reworked how the metadata is stored in NiagaraGraph from storing a Map of FNiagaraVariableMetaData to storing a map of UNiagaraScriptVariable* to be used with the Details panel.",
    value: 46,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "AddLibraryAssetProperty",
    comment:
      "Moved the emitter inheritance data from the emitter handle to the emitter to allow for chained emitter inheritance.",
    value: 47,
    firstAppearance: "4.23.0",
  }),
  new VersionDetails({
    name: "AddAdditionalDefinesProperty",
    comment: "Add property to all Niagara scripts indicating whether or not they belong to the library",
    value: 48,
    firstAppearance: "4.24.0",
  }),
  new VersionDetails({
    name: "RemoveGraphUsageCompileIds",
    comment: "Addding additional defines to the GPU script",
    value: 49,
    firstAppearance: "4.24.0",
  }),
  new VersionDetails({
    name: "AddRIAndDetailLevel",
    comment:
      "Remove the random compile id guids from the cached script usage and from the compile and script ids since the hashes serve the same purpose and are deterministic.",
    value: 50,
    firstAppearance: "4.24.0",
  }),
  new VersionDetails({
    name: "ChangeEmitterCompiledDataToSharedRefs",
    comment: "Adding UseRapidIterationParams and DetailLevelMask to the GPU script",
    value: 51,
    firstAppearance: "4.24.0",
  }),
  new VersionDetails({
    name: "DisableSortingByDefault",
    comment:
      "Changing the system and emitter compiled data to shared pointers to deal with lifetime issues in the editor.  They now are handled directly in system serialize.",
    value: 52,
    firstAppearance: "4.24.0",
  }),
  new VersionDetails({
    name: "MemorySaving",
    comment:
      "Sorting on Renderers is disabled by default, we add a version to maintain existing systems that expected sorting to be enabled",
    value: 53,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "AddSimulationStageUsageEnum",
    comment:
      "Convert TMap into TArray to save memory, TMap contains an inline allocator which pushes the size to 80 bytes",
    value: 54,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "AddGeneratedFunctionsToGPUParamInfo",
    comment: "Added a new value to the script usage enum, and we need a custom version to fix the existing bitfields.",
    value: 55,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "PlatformScalingRefactor",
    comment: "Save the functions generated by a GPU data interface inside FNiagaraDataInterfaceGPUParamInfo",
    value: 56,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "PrecompileNamespaceFixup",
    comment: "Removed DetailLevel in favor of FNiagaraPlatfomSet based selection of per platform settings.",
    value: 57,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "FixNullScriptVariables",
    comment: "Promote parameters used across script executions to the Dataset, and Demote unused parameters.",
    value: 58,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "PrecompileNamespaceFixup2",
    comment: "Postload fixup in UNiagaraGraph to fixup VariableToScriptVariable map entries being null. ",
    value: 59,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "SimulationStageInUsageBitmask",
    comment: "Move FNiagaraVariableMetaData from storing scope enum to storing registered scope name.",
    value: 60,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "StandardizeParameterNames",
    comment: "Enable the simulation stage flag by default in the usage bitmask of modules and functions",
    value: 61,
    firstAppearance: "4.25.0",
  }),
  new VersionDetails({
    name: "ComponentsOnlyHaveUserVariables",
    comment:
      "Fix graph parameter map parameters on post load so that they all have a consisten parsable format and update the UI to show and filter based on these formats.",
    value: 62,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "RibbonRendererUVRefactor",
    comment: "Make sure that UNiagaraComponents only have override maps for User variables.",
    value: 63,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "VariablesUseTypeDefRegistry",
    comment: "Refactor the options for UV settings on the ribbon renderer.",
    value: 64,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "AddLibraryVisibilityProperty",
    comment: "Replace the TypeDefinition in VariableBase with an index into the type registry",
    value: 65,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "SignificanceHandlers",
    comment: "Expand the visibility options of the scripts to be able to hide a script completely from the user ",
    value: 66,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "ModuleVersioning",
    value: 67,
    firstAppearance: "4.27.0",
  }),
  new VersionDetails({
    name: "MoveDefaultValueFromFNiagaraVariableMetaDataToUNiagaraScriptVariable",
    comment: "Added support for multiple versions of script data",
    value: 68,
    firstAppearance: "4.27.0",
  }),
  new VersionDetails({
    name: "ChangeSystemDeterministicDefault",
    value: 69,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "StaticSwitchFunctionPinsUsePersistentGuids",
    comment: "Changed the default mode from deterministic to non-deterministic which matches emitters",
    value: 70,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "VisibilityCullingImprovements",
    comment:
      "Update static switch pins to use the PersistentId from their script variable so that when they're renamed their values aren't lost when reallocating pins. ",
    value: 71,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AddBakerCameraBookmarks",
    comment: "Extended visibility culling options and moved properties into their own struct.",
    value: 72,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "PopulateFunctionCallNodePinNameBindings",
    value: 73,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "ComponentRendererSpawnProperty",
    comment:
      "Function call node refresh from external changes has been refactored so that they don't need to populate their name bindings every load.",
    value: 74,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "RepopulateFunctionCallNodePinNameBindings",
    comment: "Changed the default value for the component renderer's OnlyCreateComponentsOnParticleSpawn property",
    value: 75,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "EventSpawnsUpdateInitialAttributeValues",
    comment:
      "Previous repopulate didn't handle module attributes like Particles.Module.Name so they need to be repopulated for renaming to work correctly.",
    value: 76,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AddVariadicParametersToGPUFunctionInfo",
    comment:
      "Event spawns now optionally update Initial. attribute values. New default is true but old data is kept false to maintain existing behavior.",
    value: 77,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "DynamicPinNodeFixup",
    comment: "Adds list of variadic parameters to the information about GPU functions.",
    value: 78,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RibbonRendererLinkOrderDefaultIsUniqueID",
    comment: "Some data fixup for NiagaraNodeWithDynamicPins.",
    value: 79,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "SubImageBlendEnabledByDefault",
    comment: "Ribbon renderer will default to unique ID rather than normalized age to make more things 'just work'",
    value: 80,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "RibbonPlaneUseGeometryNormals",
    comment: "Renderer SubImage Blends are enabled by default",
    value: 81,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "InitialOwnerVelocityFromActor",
    comment: "Ribbon renderer will use geometry normals by default rather than screen / facing aligned normals",
    value: 82,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "ParameterBindingWithValueRenameFixup",
    comment:
      "Actors velocity is used for the initial velocity before the component has any tracking, old assets use the old zero velocity",
    value: 83,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SimCache_BulkDataVersion1",
    comment:
      "FNiagaraParameterBindingWithValue wouldn't necessarily have the appropriate ResolvedParameter namespace when it comes to emitter merging",
    value: 84,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "InheritanceUxRefactor",
    comment: "Sim Cache moved to bulk data by default",
    value: 85,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "NDCSpawnGroupOverrideDisabledByDefault",
    comment: "Decoupling of 'Template' and 'Inheritance'",
    value: 86,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "CustomSortingBindingToAge",
    comment:
      "NDC Read DIs will not override spawn group by default when spawning particles. Old content will remain unchanged.",
    value: 87,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "StatelessInitialMeshOrientationV1",
    comment: "Before it was normalized age which can introduce flickering with sorting and random lifetimes",
    value: 88,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "HierarchyEditorScriptSupport",
    comment: "Update Initial Mesh Orientation Module",
    value: 89,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "EmitterStateAddLoopDelayEnabled",
    comment: "Hierarchy Editor was implemented",
    value: 90,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "SerializeUsageBitMaskToGPUFunctionInfo",
    comment: "Added loop delay enabled to emitter state",
    value: 91,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "AddedNewInterpolatedSpawnMode",
    comment: "Make sure that we serialize the UsageBitMask with the GPUFunctionInfo",
    value: 92,
    firstAppearance: "5.6.0",
  }),
];

export const FNiagaraCustomVersionGuid = new CustomVersionGuid<FNiagaraCustomVersion>({
  friendlyName: "NiagaraVer",
  guid: FGuid.fromComponents(0xfcf57afa, 0x50764283, 0xb9a9e658, 0xffa02d32),
  details: FNiagaraCustomVersionDetails,
});
