// This file is generated by `extract_custom_versions.py`.
// Do not edit manually.
// noinspection JSUnusedGlobalSymbols
//

import { VersionDetails, CustomVersionGuid } from "../CustomVersionGuid";
import { FGuid } from "../../modules/CoreUObject/structs/Guid";

export enum FFortniteReleaseBranchCustomObjectVersion {
  // region Introduced with UE 4.26.0
  /// Before any version changes were made
  BeforeCustomVersionWasAdded = 0,
  // endregion

  // region Introduced with UE 5.6.0
  /// Custom 14.10 File Object Version
  DisableLevelset_v14_10 = 1,
  // endregion

  // region Introduced with UE 5.0.0
  /// Add the long range attachment tethers to the cloth asset to avoid a large hitch during the cloth's initialization.
  ChaosClothAddTethersToCachedData = 2,
  /// Chaos::TKinematicTarget no longer stores a full transform, only position/rotation.
  ChaosKinematicTargetRemoveScale = 3,
  // endregion

  // region Introduced with UE 5.1.0
  /// Move UCSModifiedProperties out of ActorComponent and in to sparse storage
  ActorComponentUCSModifiedPropertiesSparseStorage = 4,
  // endregion

  // region Introduced with UE 5.2.0
  /// Fixup Nanite meshes which were using the wrong material and didn't have proper UVs :
  FixupNaniteLandscapeMeshes = 5,
  /// Remove any cooked collision data from nanite landscape / editor spline meshes since collisions are not needed there :
  RemoveUselessLandscapeMeshesCookedCollisionData = 6,
  // endregion

  // region Introduced with UE 5.3.0
  /// Serialize out UAnimCurveCompressionCodec::InstanceGUID to maintain deterministic DDC key generation in cooked-editor
  SerializeAnimCurveCompressionCodecGuidOnCook = 7,
  /// Fix the Nanite landscape mesh being reused because of a bad name
  FixNaniteLandscapeMeshNames = 8,
  /// Fixup and synchronize shared properties modified before the synchronicity enforcement
  LandscapeSharedPropertiesEnforcement = 9,
  /// Include the cell size when computing the cell guid
  WorldPartitionRuntimeCellGuidWithCellSize = 10,
  /// Enable SkipOnlyEditorOnly style cooking of NaniteOverrideMaterial
  NaniteMaterialOverrideUsesEditorOnly = 11,
  // endregion

  // region Introduced with UE 5.4.0
  /// Store game thread particles data in single precision
  SinglePrecisonParticleData = 12,
  /// UPCGPoint custom serialization
  PCGPointStructuredSerializer = 13,
  // endregion

  // region Introduced with UE 5.5.0
  /// Deprecation of Nav Movement Properties and moving them to a new struct
  NavMovementComponentMovingPropertiesToStruct = 14,
  /// Add bone serialization for dynamic mesh attributes
  DynamicMeshAttributesSerializeBones = 15,
  // endregion

  // region Introduced with UE 5.6.0
  /// Add option for sanitizing output attribute names for all PCG data getters
  OptionSanitizeOutputAttributeNamesPCG = 16,
  /// Add automatic platform naming fix up for CommonUI input action data tables
  CommonUIPlatformNamingUpgradeOption = 17,
  // endregion
}

export const FFortniteReleaseBranchCustomObjectVersionDetails: VersionDetails[] = [
  new VersionDetails({
    name: "BeforeCustomVersionWasAdded",
    comment: "Before any version changes were made",
    value: 0,
    firstAppearance: "4.26.0",
  }),
  new VersionDetails({
    name: "DisableLevelset_v14_10",
    comment: "Custom 14.10 File Object Version",
    value: 1,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "ChaosClothAddTethersToCachedData",
    comment:
      "Add the long range attachment tethers to the cloth asset to avoid a large hitch during the cloth's initialization.",
    value: 2,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "ChaosKinematicTargetRemoveScale",
    comment: "Chaos::TKinematicTarget no longer stores a full transform, only position/rotation.",
    value: 3,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "ActorComponentUCSModifiedPropertiesSparseStorage",
    comment: "Move UCSModifiedProperties out of ActorComponent and in to sparse storage",
    value: 4,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "FixupNaniteLandscapeMeshes",
    comment: "Fixup Nanite meshes which were using the wrong material and didn't have proper UVs :",
    value: 5,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RemoveUselessLandscapeMeshesCookedCollisionData",
    comment:
      "Remove any cooked collision data from nanite landscape / editor spline meshes since collisions are not needed there :",
    value: 6,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SerializeAnimCurveCompressionCodecGuidOnCook",
    comment:
      "Serialize out UAnimCurveCompressionCodec::InstanceGUID to maintain deterministic DDC key generation in cooked-editor",
    value: 7,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "FixNaniteLandscapeMeshNames",
    comment: "Fix the Nanite landscape mesh being reused because of a bad name",
    value: 8,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "LandscapeSharedPropertiesEnforcement",
    comment: "Fixup and synchronize shared properties modified before the synchronicity enforcement",
    value: 9,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "WorldPartitionRuntimeCellGuidWithCellSize",
    comment: "Include the cell size when computing the cell guid",
    value: 10,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "NaniteMaterialOverrideUsesEditorOnly",
    comment: "Enable SkipOnlyEditorOnly style cooking of NaniteOverrideMaterial",
    value: 11,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "SinglePrecisonParticleData",
    comment: "Store game thread particles data in single precision",
    value: 12,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "PCGPointStructuredSerializer",
    comment: "UPCGPoint custom serialization",
    value: 13,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "NavMovementComponentMovingPropertiesToStruct",
    comment: "Deprecation of Nav Movement Properties and moving them to a new struct",
    value: 14,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "DynamicMeshAttributesSerializeBones",
    comment: "Add bone serialization for dynamic mesh attributes",
    value: 15,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "OptionSanitizeOutputAttributeNamesPCG",
    comment: "Add option for sanitizing output attribute names for all PCG data getters",
    value: 16,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "CommonUIPlatformNamingUpgradeOption",
    comment: "Add automatic platform naming fix up for CommonUI input action data tables",
    value: 17,
    firstAppearance: "5.6.0",
  }),
];

export const FFortniteReleaseBranchCustomObjectVersionGuid =
  new CustomVersionGuid<FFortniteReleaseBranchCustomObjectVersion>({
    friendlyName: "FortniteRelease",
    guid: FGuid.fromComponents(0xe7086368, 0x6b234c58, 0x84391b70, 0x16265e91),
    details: FFortniteReleaseBranchCustomObjectVersionDetails,
  });
