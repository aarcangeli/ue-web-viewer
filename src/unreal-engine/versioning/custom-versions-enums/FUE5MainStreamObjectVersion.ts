// This file is generated by `extract_custom_versions.py`.
// Do not edit manually.
// noinspection JSUnusedGlobalSymbols
//

import { VersionDetails, CustomVersionGuid } from "../CustomVersionGuid";
import { FGuid } from "../../modules/CoreUObject/structs/Guid";

export enum FUE5MainStreamObjectVersion {
  // region Introduced with UE 5.0.0
  /// Before any version changes were made
  BeforeCustomVersionWasAdded = 0,
  /// Nanite data added to Chaos geometry collections
  GeometryCollectionNaniteData = 1,
  /// Nanite Geometry Collection data moved to DDC
  GeometryCollectionNaniteDDC = 2,
  /// Removing SourceAnimationData, animation layering is now applied during compression
  RemovingSourceAnimationData = 3,
  /// This is the correct versioning for MeshDescription changes which were added to ReleaseObjectVersion.
  MeshDescriptionNewFormat = 4,
  /// Serialize GridGuid in PartitionActorDesc
  PartitionActorDescSerializeGridGuid = 5,
  /// Set PKG_ContainsMapData on external actor packages
  ExternalActorsMapDataPackageFlag = 6,
  /// Added a new configurable BlendProfileMode that the user can setup to control the behavior of blend profiles.
  AnimationAddedBlendProfileModes = 7,
  /// Serialize DataLayers in WorldPartitionActorDesc
  WorldPartitionActorDescSerializeDataLayers = 8,
  /// Renaming UAnimSequence::NumFrames to NumberOfKeys, as that what is actually contains.
  RenamingAnimationNumFrames = 9,
  /// Serialize HLODLayer in WorldPartition HLODActorDesc
  WorldPartitionHLODActorDescSerializeHLODLayer = 10,
  /// Fixed Nanite Geometry Collection cooked data
  GeometryCollectionNaniteCooked = 11,
  /// Added bCooked to UFontFace assets
  AddedCookedBoolFontFaceAssets = 12,
  /// Serialize CellHash in WorldPartition HLODActorDesc
  WorldPartitionHLODActorDescSerializeCellHash = 13,
  /// Nanite data is now transient in Geometry Collection similar to how RenderData is transient in StaticMesh.
  GeometryCollectionNaniteTransient = 14,
  /// Added FLandscapeSplineActorDesc
  AddedLandscapeSplineActorDesc = 15,
  /// Added support for per-object collision constraint flag. [Chaos]
  AddCollisionConstraintFlag = 16,
  /// Initial Mantle Serialize Version
  MantleDbSerialize = 17,
  /// Animation sync groups explicitly specify sync method
  AnimSyncGroupsExplicitSyncMethod = 18,
  /// Fixup FLandscapeActorDesc Grid indices
  FLandscapeActorDescFixupGridIndices = 19,
  /// FoliageType with HLOD support
  FoliageTypeIncludeInHLOD = 20,
  /// Introducing UAnimDataModel sub-object for UAnimSequenceBase containing all animation source data
  IntroducingAnimationDataModel = 21,
  /// Serialize ActorLabel in WorldPartitionActorDesc
  WorldPartitionActorDescSerializeActorLabel = 22,
  /// Fix WorldPartitionActorDesc serialization archive not persistent
  WorldPartitionActorDescSerializeArchivePersistent = 23,
  /// Fix potentially duplicated actors when using ForceExternalActorLevelReference
  FixForceExternalActorLevelReferenceDuplicates = 24,
  /// Make UMeshDescriptionBase serializable
  SerializeMeshDescriptionBase = 25,
  /// Chaos FConvex uses array of FVec3s for vertices instead of particles
  ConvexUsesVerticesArray = 26,
  /// Serialize HLOD info in WorldPartitionActorDesc
  WorldPartitionActorDescSerializeHLODInfo = 27,
  /// Expose particle Disabled flag to the game thread
  AddDisabledFlag = 28,
  /// Moving animation custom attributes from AnimationSequence to UAnimDataModel
  MoveCustomAttributesToDataModel = 29,
  /// Use of triangulation at runtime in BlendSpace
  BlendSpaceRuntimeTriangulation = 30,
  /// Fix to the Cubic smoothing, plus introduction of new smoothing types
  BlendSpaceSmoothingImprovements = 31,
  /// Removing Tessellation parameters from Materials
  RemovingTessellationParameters = 32,
  /// Sparse class data serializes its associated structure to allow for BP types to be used
  SparseClassDataStructSerialization = 33,
  /// PackedLevelInstance bounds fix
  PackedLevelInstanceBoundsFix = 34,
  /// Initial set of anim nodes converted to use constants held in sparse class data
  AnimNodeConstantDataRefactorPhase0 = 35,
  /// Explicitly serialized bSavedCachedExpressionData for Material(Instance)
  MaterialSavedCachedData = 36,
  /// Remove explicit decal blend mode
  RemoveDecalBlendMode = 37,
  /// Made directional lights be atmosphere lights by default
  DirLightsAreAtmosphereLightsByDefault = 38,
  /// Changed how world partition streaming cells are named
  WorldPartitionStreamingCellsNamingShortened = 39,
  /// Changed how actor descriptors compute their bounds
  WorldPartitionActorDescGetStreamingBounds = 40,
  /// Switch FMeshDescriptionBulkData to use virtualized bulkdata
  MeshDescriptionVirtualization = 41,
  /// Switch FTextureSource to use virtualized bulkdata
  TextureSourceVirtualization = 42,
  /// RigVM to store more information alongside the Copy Operator
  RigVMCopyOpStoreNumBytes = 43,
  /// Expanded separate translucency into multiple passes
  MaterialTranslucencyPass = 44,
  /// Chaos FGeometryCollectionObject user defined collision shapes support
  GeometryCollectionUserDefinedCollisionShapes = 45,
  /// Removed the AtmosphericFog component with conversion to SkyAtmosphere component
  RemovedAtmosphericFog = 46,
  /// The SkyAtmosphere now light up the heightfog by default, and by default the height fog has a black color.
  SkyAtmosphereAffectsHeightFogWithBetterDefault = 47,
  /// Ordering of samples in BlendSpace
  BlendSpaceSampleOrdering = 48,
  /// No longer bake MassToLocal transform into recorded transform data in GeometryCollection caching
  GeometryCollectionCacheRemovesMassToLocal = 49,
  /// UEdGraphPin serializes SourceIndex
  EdGraphPinSourceIndex = 50,
  /// Change texture bulkdatas to have unique guids
  VirtualizedBulkDataHaveUniqueGuids = 51,
  /// Introduce RigVM Memory Class Object
  RigVMMemoryStorageObject = 52,
  /// Ray tracing shadows have three states now (Disabled, Use Project Settings, Enabled)
  RayTracedShadowsType = 53,
  /// Add bVisibleInRayTracing flag to Skeletal Mesh Sections
  SkelMeshSectionVisibleInRayTracingFlagAdded = 54,
  /// Add generic tagging of all anim graph nodes in anim blueprints
  AnimGraphNodeTaggingAdded = 55,
  /// Add custom version to FDynamicMesh3
  DynamicMeshCompactedSerialization = 56,
  /// Remove the inline reduction bulkdata and replace it by a simple vertex and triangle count cache
  ConvertReductionBaseSkeletalMeshBulkDataToInlineReductionCacheData = 57,
  /// Added some new MeshInfo to the FSkeletalMeshLODModel class.
  SkeletalMeshLODModelMeshInfo = 58,
  /// Add Texture DoScaleMipsForAlphaCoverage
  TextureDoScaleMipsForAlphaCoverage = 59,
  // endregion

  // region Introduced with UE 5.1.0
  /// Fixed default value of volumetric cloud to be exact match with main view, more expenssive but we let user choosing how to lower the quality.
  VolumetricCloudReflectionSampleCountDefaultUpdate = 60,
  /// Use special BVH for TriangleMesh, instead of the AABBTree
  UseTriangleMeshBVH = 61,
  /// FDynamicMeshAttributeSet has Weight Maps. TDynamicAttributeBase serializes its name.
  DynamicMeshAttributesWeightMapsAndNames = 62,
  /// Switching FK control naming scheme to incorporate _CURVE for curve controls
  FKControlNamingScheme = 63,
  /// Fix-up for FRichCurveKey::TangentWeightMode, which were found to contain invalid value w.r.t the enum-type
  RichCurveKeyInvalidTangentMode = 64,
  /// Enforcing new automatic tangent behaviour, enforcing auto-tangents for Key0 and KeyN to be flat, for Animation Assets.
  ForceUpdateAnimationAssetCurveTangents = 65,
  /// SoundWave Update to use EditorBuildData for it's RawData
  SoundWaveVirtualizationUpdate = 66,
  /// Fix material feature level nodes to account for new SM6 input pin.
  MaterialFeatureLevelNodeFixForSM6 = 67,
  /// Fix material feature level nodes to account for new SM6 input pin.
  GeometryCollectionPerChildDamageThreshold = 68,
  /// Move some Chaos flags into a bitfield
  AddRigidParticleControlFlags = 69,
  /// Allow each LiveLink controller to specify its own component to control
  LiveLinkComponentPickerPerController = 70,
  /// Remove Faces in Triangle Mesh BVH
  RemoveTriangleMeshBVHFaces = 71,
  /// Moving all nodal offset handling to Lens Component
  LensComponentNodalOffset = 72,
  /// GPU none interpolated spawning no longer calls the update script
  FixGpuAlwaysRunningUpdateScriptNoneInterpolated = 73,
  /// World partition streaming policy serialization only for cooked builds
  WorldPartitionSerializeStreamingPolicyOnCook = 74,
  /// Remove serialization of bounds relevant from Â WorldPartitionActorDesc
  WorldPartitionActorDescRemoveBoundsRelevantSerialization = 75,
  /// will be unable to be loaded
  AnimationDataModelInterface_BackedOut = 76,
  /// Deprecate LandscapeSplineActorDesc
  LandscapeSplineActorDescDeprecation = 77,
  /// Revert the IAnimationDataModel changes. Animation assets
  BackoutAnimationDataModelInterface = 78,
  /// Made stationary local and skylights behave similar to SM5
  MobileStationaryLocalLights = 79,
  /// Made ManagedArrayCollection::FValueType::Value always serialize when FValueType is
  ManagedArrayCollectionAlwaysSerializeValue = 80,
  /// Moving all distortion handling to Lens Component
  LensComponentDistortion = 81,
  /// Updated image media source path resolution logic
  ImgMediaPathResolutionWithEngineOrProjectTokens = 82,
  /// Add low resolution data in Height Field
  AddLowResolutionHeightField = 83,
  /// Low resolution data in Height Field will store one height for (6x6) 36 cells
  DecreaseLowResolutionHeightField = 84,
  /// Add damage propagation settings to geometry collections
  GeometryCollectionDamagePropagationData = 85,
  /// Wheel friction forces are now applied at tire contact point
  VehicleFrictionForcePositionChange = 86,
  /// Add flag to override MeshDeformer on a SkinnedMeshComponent.
  AddSetMeshDeformerFlag = 87,
  /// Replace FNames for class/actor paths with FSoftObjectPath
  WorldPartitionActorDescActorAndClassPaths = 88,
  // endregion

  // region Introduced with UE 5.2.0
  /// Reintroducing AnimationDataModelInterface_BackedOut changes
  ReintroduceAnimationDataModelInterface = 89,
  /// Support 16-bit skin weights on SkeletalMesh
  IncreasedSkinWeightPrecision = 90,
  /// bIsUsedWithVolumetricCloud flag auto conversion
  MaterialHasIsUsedWithVolumetricCloudFlag = 91,
  /// bIsUsedWithVolumetricCloud flag auto conversion
  UpdateHairDescriptionBulkData = 92,
  /// Added TransformScaleMethod pin to SpawnActorFromClass node
  SpawnActorFromClassTransformScaleMethod = 93,
  /// Added support for the RigVM to run branches lazily
  RigVMLazyEvaluation = 94,
  /// Adding additional object version to defer out-of-date pose asset warning until next resaves
  PoseAssetRawDataGUIDUpdate = 95,
  /// Store function information (and compilation data) in blueprint generated class
  RigVMSaveFunctionAccessInModel = 96,
  /// Store the RigVM execute context struct the VM uses in the archive
  RigVMSerializeExecuteContextStruct = 97,
  /// Store the Visual Logger timestamp as a double
  VisualLoggerTimeStampAsDouble = 98,
  /// Add ThinSurface instance override support
  MaterialInstanceBasePropertyOverridesThinSurface = 99,
  /// Add refraction mode None, converted from legacy when the refraction pin is not plugged.
  MaterialRefractionModeNone = 100,
  /// Store serialized graph function in the function data
  RigVMSaveSerializedGraphInGraphFunctionData = 101,
  /// Animation Sequence now stores its frame-rate on a per-platform basis
  PerPlatformAnimSequenceTargetFrameRate = 102,
  /// New default for number of attributes on 2d grids
  NiagaraGrid2DDefaultUnnamedAttributesZero = 103,
  /// RigVM generated class refactor
  RigVMGeneratedClass = 104,
  // endregion

  // region Introduced with UE 5.3.0
  /// In certain cases, Blueprint pins with a PC_Object category would serialize a null PinSubCategoryObject
  NullPinSubCategoryObjectFix = 105,
  /// Allow custom event nodes to use access specifiers
  AccessSpecifiersForCustomEvents = 106,
  /// Explicit override of Groom's hair width
  GroomAssetWidthOverride = 107,
  /// Smart names removed from animation systems
  AnimationRemoveSmartNames = 108,
  /// Change the default for facing & alignment to be automatic
  NiagaraSpriteRendererFacingAlignmentAutoDefault = 109,
  /// Change the default for facing & alignment to be automatic
  GroomAssetRemoveInAssetSerialization = 110,
  /// Changed the material property connected bitmasks from 32bit to 64bit
  IncreaseMaterialAttributesInputMask = 111,
  /// Combines proprties into a new binding so users can select constant or binding
  NiagaraSimStageNumIterationsBindings = 112,
  /// Skeletal vertex attributes
  SkeletalVertexAttributes = 113,
  /// Store the RigVM execute context struct the VM uses in the archive
  RigVMExternalExecuteContextStruct = 114,
  /// serialization inputs and outputs as two different sections
  DataflowSeparateInputOutputSerialization = 115,
  /// Cloth collection tether initialization
  ClothCollectionTetherInitialization = 116,
  /// OpenColorIO transforms now serialize their generated texture(s) and shader code normally into the uasset.
  OpenColorIOAssetCacheSerialization = 117,
  /// Cloth collection single lod schema
  ClothCollectionSingleLodSchema = 118,
  // endregion

  // region Introduced with UE 5.4.0
  /// Visual Logger format now includes a WorldTimeStamp in addition to TimeStamp for easier debugging between multiple instances.
  VisualLoggerAddedSeparateWorldTime = 119,
  // endregion

  // region Introduced with UE 5.6.0
  /// Added support for InstanceDataManagerSerialization and changed format for the instances to FTransform3f
  SkinnedMeshInstanceDataSerializationV2 = 120,
  /// Added new material compilation validation for runtime virtual textures
  RuntimeVirtualTextureMaterialValidation = 121,
  // endregion
}

export const FUE5MainStreamObjectVersionDetails: VersionDetails[] = [
  new VersionDetails({
    name: "BeforeCustomVersionWasAdded",
    comment: "Before any version changes were made",
    value: 0,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionNaniteData",
    comment: "Nanite data added to Chaos geometry collections",
    value: 1,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionNaniteDDC",
    comment: "Nanite Geometry Collection data moved to DDC",
    value: 2,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RemovingSourceAnimationData",
    comment: "Removing SourceAnimationData, animation layering is now applied during compression",
    value: 3,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MeshDescriptionNewFormat",
    comment: "This is the correct versioning for MeshDescription changes which were added to ReleaseObjectVersion.",
    value: 4,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "PartitionActorDescSerializeGridGuid",
    comment: "Serialize GridGuid in PartitionActorDesc",
    value: 5,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "ExternalActorsMapDataPackageFlag",
    comment: "Set PKG_ContainsMapData on external actor packages",
    value: 6,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AnimationAddedBlendProfileModes",
    comment:
      "Added a new configurable BlendProfileMode that the user can setup to control the behavior of blend profiles.",
    value: 7,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescSerializeDataLayers",
    comment: "Serialize DataLayers in WorldPartitionActorDesc",
    value: 8,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RenamingAnimationNumFrames",
    comment: "Renaming UAnimSequence::NumFrames to NumberOfKeys, as that what is actually contains.",
    value: 9,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionHLODActorDescSerializeHLODLayer",
    comment: "Serialize HLODLayer in WorldPartition HLODActorDesc",
    value: 10,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionNaniteCooked",
    comment: "Fixed Nanite Geometry Collection cooked data",
    value: 11,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AddedCookedBoolFontFaceAssets",
    comment: "Added bCooked to UFontFace assets",
    value: 12,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionHLODActorDescSerializeCellHash",
    comment: "Serialize CellHash in WorldPartition HLODActorDesc",
    value: 13,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionNaniteTransient",
    comment:
      "Nanite data is now transient in Geometry Collection similar to how RenderData is transient in StaticMesh.",
    value: 14,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AddedLandscapeSplineActorDesc",
    comment: "Added FLandscapeSplineActorDesc",
    value: 15,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AddCollisionConstraintFlag",
    comment: "Added support for per-object collision constraint flag. [Chaos]",
    value: 16,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MantleDbSerialize",
    comment: "Initial Mantle Serialize Version",
    value: 17,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AnimSyncGroupsExplicitSyncMethod",
    comment: "Animation sync groups explicitly specify sync method",
    value: 18,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "FLandscapeActorDescFixupGridIndices",
    comment: "Fixup FLandscapeActorDesc Grid indices",
    value: 19,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "FoliageTypeIncludeInHLOD",
    comment: "FoliageType with HLOD support",
    value: 20,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "IntroducingAnimationDataModel",
    comment: "Introducing UAnimDataModel sub-object for UAnimSequenceBase containing all animation source data",
    value: 21,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescSerializeActorLabel",
    comment: "Serialize ActorLabel in WorldPartitionActorDesc",
    value: 22,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescSerializeArchivePersistent",
    comment: "Fix WorldPartitionActorDesc serialization archive not persistent",
    value: 23,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "FixForceExternalActorLevelReferenceDuplicates",
    comment: "Fix potentially duplicated actors when using ForceExternalActorLevelReference",
    value: 24,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "SerializeMeshDescriptionBase",
    comment: "Make UMeshDescriptionBase serializable",
    value: 25,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "ConvexUsesVerticesArray",
    comment: "Chaos FConvex uses array of FVec3s for vertices instead of particles",
    value: 26,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescSerializeHLODInfo",
    comment: "Serialize HLOD info in WorldPartitionActorDesc",
    value: 27,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AddDisabledFlag",
    comment: "Expose particle Disabled flag to the game thread",
    value: 28,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MoveCustomAttributesToDataModel",
    comment: "Moving animation custom attributes from AnimationSequence to UAnimDataModel",
    value: 29,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "BlendSpaceRuntimeTriangulation",
    comment: "Use of triangulation at runtime in BlendSpace",
    value: 30,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "BlendSpaceSmoothingImprovements",
    comment: "Fix to the Cubic smoothing, plus introduction of new smoothing types",
    value: 31,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RemovingTessellationParameters",
    comment: "Removing Tessellation parameters from Materials",
    value: 32,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "SparseClassDataStructSerialization",
    comment: "Sparse class data serializes its associated structure to allow for BP types to be used",
    value: 33,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "PackedLevelInstanceBoundsFix",
    comment: "PackedLevelInstance bounds fix",
    value: 34,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AnimNodeConstantDataRefactorPhase0",
    comment: "Initial set of anim nodes converted to use constants held in sparse class data",
    value: 35,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MaterialSavedCachedData",
    comment: "Explicitly serialized bSavedCachedExpressionData for Material(Instance)",
    value: 36,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RemoveDecalBlendMode",
    comment: "Remove explicit decal blend mode",
    value: 37,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "DirLightsAreAtmosphereLightsByDefault",
    comment: "Made directional lights be atmosphere lights by default",
    value: 38,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionStreamingCellsNamingShortened",
    comment: "Changed how world partition streaming cells are named",
    value: 39,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescGetStreamingBounds",
    comment: "Changed how actor descriptors compute their bounds",
    value: 40,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MeshDescriptionVirtualization",
    comment: "Switch FMeshDescriptionBulkData to use virtualized bulkdata",
    value: 41,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "TextureSourceVirtualization",
    comment: "Switch FTextureSource to use virtualized bulkdata",
    value: 42,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RigVMCopyOpStoreNumBytes",
    comment: "RigVM to store more information alongside the Copy Operator",
    value: 43,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "MaterialTranslucencyPass",
    comment: "Expanded separate translucency into multiple passes",
    value: 44,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionUserDefinedCollisionShapes",
    comment: "Chaos FGeometryCollectionObject user defined collision shapes support",
    value: 45,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RemovedAtmosphericFog",
    comment: "Removed the AtmosphericFog component with conversion to SkyAtmosphere component",
    value: 46,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "SkyAtmosphereAffectsHeightFogWithBetterDefault",
    comment:
      "The SkyAtmosphere now light up the heightfog by default, and by default the height fog has a black color.",
    value: 47,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "BlendSpaceSampleOrdering",
    comment: "Ordering of samples in BlendSpace",
    value: 48,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionCacheRemovesMassToLocal",
    comment: "No longer bake MassToLocal transform into recorded transform data in GeometryCollection caching",
    value: 49,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "EdGraphPinSourceIndex",
    comment: "UEdGraphPin serializes SourceIndex",
    value: 50,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "VirtualizedBulkDataHaveUniqueGuids",
    comment: "Change texture bulkdatas to have unique guids",
    value: 51,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RigVMMemoryStorageObject",
    comment: "Introduce RigVM Memory Class Object",
    value: 52,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "RayTracedShadowsType",
    comment: "Ray tracing shadows have three states now (Disabled, Use Project Settings, Enabled)",
    value: 53,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "SkelMeshSectionVisibleInRayTracingFlagAdded",
    comment: "Add bVisibleInRayTracing flag to Skeletal Mesh Sections",
    value: 54,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "AnimGraphNodeTaggingAdded",
    comment: "Add generic tagging of all anim graph nodes in anim blueprints",
    value: 55,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "DynamicMeshCompactedSerialization",
    comment: "Add custom version to FDynamicMesh3",
    value: 56,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "ConvertReductionBaseSkeletalMeshBulkDataToInlineReductionCacheData",
    comment: "Remove the inline reduction bulkdata and replace it by a simple vertex and triangle count cache",
    value: 57,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "SkeletalMeshLODModelMeshInfo",
    comment: "Added some new MeshInfo to the FSkeletalMeshLODModel class.",
    value: 58,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "TextureDoScaleMipsForAlphaCoverage",
    comment: "Add Texture DoScaleMipsForAlphaCoverage",
    value: 59,
    firstAppearance: "5.0.0",
  }),
  new VersionDetails({
    name: "VolumetricCloudReflectionSampleCountDefaultUpdate",
    comment:
      "Fixed default value of volumetric cloud to be exact match with main view, more expenssive but we let user choosing how to lower the quality.",
    value: 60,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "UseTriangleMeshBVH",
    comment: "Use special BVH for TriangleMesh, instead of the AABBTree",
    value: 61,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "DynamicMeshAttributesWeightMapsAndNames",
    comment: "FDynamicMeshAttributeSet has Weight Maps. TDynamicAttributeBase serializes its name.",
    value: 62,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "FKControlNamingScheme",
    comment: "Switching FK control naming scheme to incorporate _CURVE for curve controls",
    value: 63,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "RichCurveKeyInvalidTangentMode",
    comment:
      "Fix-up for FRichCurveKey::TangentWeightMode, which were found to contain invalid value w.r.t the enum-type",
    value: 64,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "ForceUpdateAnimationAssetCurveTangents",
    comment:
      "Enforcing new automatic tangent behaviour, enforcing auto-tangents for Key0 and KeyN to be flat, for Animation Assets.",
    value: 65,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "SoundWaveVirtualizationUpdate",
    comment: "SoundWave Update to use EditorBuildData for it's RawData",
    value: 66,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "MaterialFeatureLevelNodeFixForSM6",
    comment: "Fix material feature level nodes to account for new SM6 input pin.",
    value: 67,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionPerChildDamageThreshold",
    comment: "Fix material feature level nodes to account for new SM6 input pin.",
    value: 68,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AddRigidParticleControlFlags",
    comment: "Move some Chaos flags into a bitfield",
    value: 69,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "LiveLinkComponentPickerPerController",
    comment: "Allow each LiveLink controller to specify its own component to control",
    value: 70,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "RemoveTriangleMeshBVHFaces",
    comment: "Remove Faces in Triangle Mesh BVH",
    value: 71,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "LensComponentNodalOffset",
    comment: "Moving all nodal offset handling to Lens Component",
    value: 72,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "FixGpuAlwaysRunningUpdateScriptNoneInterpolated",
    comment: "GPU none interpolated spawning no longer calls the update script",
    value: 73,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "WorldPartitionSerializeStreamingPolicyOnCook",
    comment: "World partition streaming policy serialization only for cooked builds",
    value: 74,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescRemoveBoundsRelevantSerialization",
    comment: "Remove serialization of bounds relevant from Â WorldPartitionActorDesc",
    value: 75,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AnimationDataModelInterface_BackedOut",
    comment: "will be unable to be loaded",
    value: 76,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "LandscapeSplineActorDescDeprecation",
    comment: "Deprecate LandscapeSplineActorDesc",
    value: 77,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "BackoutAnimationDataModelInterface",
    comment: "Revert the IAnimationDataModel changes. Animation assets ",
    value: 78,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "MobileStationaryLocalLights",
    comment: "Made stationary local and skylights behave similar to SM5",
    value: 79,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "ManagedArrayCollectionAlwaysSerializeValue",
    comment: "Made ManagedArrayCollection::FValueType::Value always serialize when FValueType is",
    value: 80,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "LensComponentDistortion",
    comment: "Moving all distortion handling to Lens Component",
    value: 81,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "ImgMediaPathResolutionWithEngineOrProjectTokens",
    comment: "Updated image media source path resolution logic",
    value: 82,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AddLowResolutionHeightField",
    comment: "Add low resolution data in Height Field",
    value: 83,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "DecreaseLowResolutionHeightField",
    comment: "Low resolution data in Height Field will store one height for (6x6) 36 cells",
    value: 84,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "GeometryCollectionDamagePropagationData",
    comment: "Add damage propagation settings to geometry collections",
    value: 85,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "VehicleFrictionForcePositionChange",
    comment: "Wheel friction forces are now applied at tire contact point",
    value: 86,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "AddSetMeshDeformerFlag",
    comment: "Add flag to override MeshDeformer on a SkinnedMeshComponent.",
    value: 87,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "WorldPartitionActorDescActorAndClassPaths",
    comment: "Replace FNames for class/actor paths with FSoftObjectPath",
    value: 88,
    firstAppearance: "5.1.0",
  }),
  new VersionDetails({
    name: "ReintroduceAnimationDataModelInterface",
    comment: "Reintroducing AnimationDataModelInterface_BackedOut changes",
    value: 89,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "IncreasedSkinWeightPrecision",
    comment: "Support 16-bit skin weights on SkeletalMesh",
    value: 90,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "MaterialHasIsUsedWithVolumetricCloudFlag",
    comment: "bIsUsedWithVolumetricCloud flag auto conversion",
    value: 91,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "UpdateHairDescriptionBulkData",
    comment: "bIsUsedWithVolumetricCloud flag auto conversion",
    value: 92,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SpawnActorFromClassTransformScaleMethod",
    comment: "Added TransformScaleMethod pin to SpawnActorFromClass node",
    value: 93,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RigVMLazyEvaluation",
    comment: "Added support for the RigVM to run branches lazily",
    value: 94,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "PoseAssetRawDataGUIDUpdate",
    comment: "Adding additional object version to defer out-of-date pose asset warning until next resaves",
    value: 95,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RigVMSaveFunctionAccessInModel",
    comment: "Store function information (and compilation data) in blueprint generated class",
    value: 96,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RigVMSerializeExecuteContextStruct",
    comment: "Store the RigVM execute context struct the VM uses in the archive",
    value: 97,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "VisualLoggerTimeStampAsDouble",
    comment: "Store the Visual Logger timestamp as a double",
    value: 98,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "MaterialInstanceBasePropertyOverridesThinSurface",
    comment: "Add ThinSurface instance override support",
    value: 99,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "MaterialRefractionModeNone",
    comment: "Add refraction mode None, converted from legacy when the refraction pin is not plugged.",
    value: 100,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RigVMSaveSerializedGraphInGraphFunctionData",
    comment: "Store serialized graph function in the function data",
    value: 101,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "PerPlatformAnimSequenceTargetFrameRate",
    comment: "Animation Sequence now stores its frame-rate on a per-platform basis",
    value: 102,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "NiagaraGrid2DDefaultUnnamedAttributesZero",
    comment: "New default for number of attributes on 2d grids",
    value: 103,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RigVMGeneratedClass",
    comment: "RigVM generated class refactor",
    value: 104,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "NullPinSubCategoryObjectFix",
    comment: "In certain cases, Blueprint pins with a PC_Object category would serialize a null PinSubCategoryObject",
    value: 105,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "AccessSpecifiersForCustomEvents",
    comment: "Allow custom event nodes to use access specifiers",
    value: 106,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "GroomAssetWidthOverride",
    comment: "Explicit override of Groom's hair width",
    value: 107,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "AnimationRemoveSmartNames",
    comment: "Smart names removed from animation systems",
    value: 108,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "NiagaraSpriteRendererFacingAlignmentAutoDefault",
    comment: "Change the default for facing & alignment to be automatic",
    value: 109,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "GroomAssetRemoveInAssetSerialization",
    comment: "Change the default for facing & alignment to be automatic",
    value: 110,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "IncreaseMaterialAttributesInputMask",
    comment: "Changed the material property connected bitmasks from 32bit to 64bit",
    value: 111,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "NiagaraSimStageNumIterationsBindings",
    comment: "Combines proprties into a new binding so users can select constant or binding",
    value: 112,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "SkeletalVertexAttributes",
    comment: "Skeletal vertex attributes",
    value: 113,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "RigVMExternalExecuteContextStruct",
    comment: "Store the RigVM execute context struct the VM uses in the archive",
    value: 114,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "DataflowSeparateInputOutputSerialization",
    comment: "serialization inputs and outputs as two different sections",
    value: 115,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "ClothCollectionTetherInitialization",
    comment: "Cloth collection tether initialization",
    value: 116,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "OpenColorIOAssetCacheSerialization",
    comment:
      "OpenColorIO transforms now serialize their generated texture(s) and shader code normally into the uasset.",
    value: 117,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "ClothCollectionSingleLodSchema",
    comment: "Cloth collection single lod schema",
    value: 118,
    firstAppearance: "5.3.0",
  }),
  new VersionDetails({
    name: "VisualLoggerAddedSeparateWorldTime",
    comment:
      "Visual Logger format now includes a WorldTimeStamp in addition to TimeStamp for easier debugging between multiple instances.",
    value: 119,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SkinnedMeshInstanceDataSerializationV2",
    comment: "Added support for InstanceDataManagerSerialization and changed format for the instances to FTransform3f",
    value: 120,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "RuntimeVirtualTextureMaterialValidation",
    comment: "Added new material compilation validation for runtime virtual textures",
    value: 121,
    firstAppearance: "5.6.0",
  }),
];

export const FUE5MainStreamObjectVersionGuid = new CustomVersionGuid<FUE5MainStreamObjectVersion>({
  friendlyName: "UE5-Main",
  guid: FGuid.fromComponents(0x697dd581, 0xe64f41ab, 0xaa4a51ec, 0xbeb7b628),
  details: FUE5MainStreamObjectVersionDetails,
});
