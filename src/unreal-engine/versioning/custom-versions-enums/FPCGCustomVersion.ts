// This file is generated by `extract_custom_versions.py`.
// Do not edit manually.
// noinspection JSUnusedGlobalSymbols
//

import { VersionDetails, CustomVersionGuid } from "../CustomVersionGuid";
import { FGuid } from "../../modules/CoreUObject/structs/Guid";

export enum FPCGCustomVersion {
  // region Introduced with UE 5.4.0
  /// Before any version changes were made in the plugin
  BeforeCustomVersionWasAdded = 0,
  /// Split projection nodes inputs to separate source edges and target edge
  SplitProjectionNodeInputs = 1,
  MoveSelfPruningParamsOffFirstPin = 2,
  MoveParamsOffFirstPinDensityNodes = 3,
  /// Split samplers to give a sampling shape and a bounding shape inputs
  SplitSamplerNodesInputs = 4,
  MovePointFilterParamsOffFirstPin = 5,
  /// Add param pin for all nodes that have override and were using the default input pin.
  AddParamPinToOverridableNodes = 6,
  /// Sampling shape and bounding shape inputs.
  SplitVolumeSamplerNodeInputs = 7,
  /// Renamed spline input and added bounding shape input.
  SplineSamplerUpdatedNodeInputs = 8,
  /// Renamed params to override.
  RenameDefaultParamsToOverride = 9,
  /// Behavior change for SplineSampler which now defaults to being bounded
  SplineSamplerBoundedByDefault = 10,
  /// StaticMeshSpawner now defaults to modify point bounds based on StaticMesh bounds
  StaticMeshSpawnerApplyMeshBoundsToPointsByDefault = 11,
  /// Update of Input Selectors. Previous versions should default on @LastCreated
  UpdateAttributePropertyInputSelector = 12,
  /// Difference node now iterates on the source pin and unions the differences pin
  DifferenceNodeIterateOnSourceAndUnionDifferences = 13,
  /// Update AddAttribute with selectors
  UpdateAddAttributeWithSelectors = 14,
  /// Update TransferAttribute with selectors
  UpdateTransferAttributeWithSelectors = 15,
  /// Removed by-default pins on input node. Note, this breaks cooked binary compatibility
  UpdateInputOutputNodesDefaults = 16,
  /// Introduced the concept of pin usage and graph defaults around loops, which changed the default behavior otherwise
  UpdateGraphSettingsLoopPins = 17,
  /// Added 'out' filter pins on filter by tag & by type
  UpdateFilterNodeOutputPins = 18,
  /// Added 'bComponentsMustOverlapSelf' to GetActorData when the mode collects PCG component data
  GetPCGComponentDataMustOverlapSourceComponentByDefault = 19,
  /// Added dynamic tracking to the PCG component serialization
  DynamicTrackingKeysSerializedInComponent = 20,
  /// Supporting partitioned components in non-partitioned levels
  SupportPartitionedComponentsInNonPartitionedLevels = 21,
  /// New gate for new data, so any node that has a non Point pin don't do any ToPointData by default.
  NoMoreSpatialDataConversionToPointDataByDefaultOnNonPointPins = 22,
  // endregion

  // region Introduced with UE 5.5.0
  /// Attributes and tags can now contain spaces and will no longer be parsed by spaces.
  AttributesAndTagsCanContainSpaces = 23,
  // endregion

  // region Introduced with UE 5.6.0
  /// Multi Domain Metadata
  MultiLevelMetadata = 24,
  /// Refactor of the Attribute Property selector to deprecate point properties and support any property.
  AttributePropertySelectorDeprecatePointProperties = 25,
  // endregion
}

export const FPCGCustomVersionDetails: VersionDetails[] = [
  new VersionDetails({
    name: "BeforeCustomVersionWasAdded",
    comment: "Before any version changes were made in the plugin",
    value: 0,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SplitProjectionNodeInputs",
    comment: "Split projection nodes inputs to separate source edges and target edge",
    value: 1,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "MoveSelfPruningParamsOffFirstPin",
    value: 2,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "MoveParamsOffFirstPinDensityNodes",
    value: 3,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SplitSamplerNodesInputs",
    comment: "Split samplers to give a sampling shape and a bounding shape inputs",
    value: 4,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "MovePointFilterParamsOffFirstPin",
    value: 5,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "AddParamPinToOverridableNodes",
    comment: "Add param pin for all nodes that have override and were using the default input pin.",
    value: 6,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SplitVolumeSamplerNodeInputs",
    comment: "Sampling shape and bounding shape inputs.",
    value: 7,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SplineSamplerUpdatedNodeInputs",
    comment: "Renamed spline input and added bounding shape input.",
    value: 8,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "RenameDefaultParamsToOverride",
    comment: "Renamed params to override.",
    value: 9,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SplineSamplerBoundedByDefault",
    comment: "Behavior change for SplineSampler which now defaults to being bounded",
    value: 10,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "StaticMeshSpawnerApplyMeshBoundsToPointsByDefault",
    comment: "StaticMeshSpawner now defaults to modify point bounds based on StaticMesh bounds",
    value: 11,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateAttributePropertyInputSelector",
    comment: "Update of Input Selectors. Previous versions should default on @LastCreated",
    value: 12,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "DifferenceNodeIterateOnSourceAndUnionDifferences",
    comment: "Difference node now iterates on the source pin and unions the differences pin",
    value: 13,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateAddAttributeWithSelectors",
    comment: "Update AddAttribute with selectors",
    value: 14,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateTransferAttributeWithSelectors",
    comment: "Update TransferAttribute with selectors",
    value: 15,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateInputOutputNodesDefaults",
    comment: "Removed by-default pins on input node. Note, this breaks cooked binary compatibility",
    value: 16,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateGraphSettingsLoopPins",
    comment:
      "Introduced the concept of pin usage and graph defaults around loops, which changed the default behavior otherwise",
    value: 17,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "UpdateFilterNodeOutputPins",
    comment: "Added 'out' filter pins on filter by tag & by type",
    value: 18,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "GetPCGComponentDataMustOverlapSourceComponentByDefault",
    comment: "Added 'bComponentsMustOverlapSelf' to GetActorData when the mode collects PCG component data",
    value: 19,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "DynamicTrackingKeysSerializedInComponent",
    comment: "Added dynamic tracking to the PCG component serialization",
    value: 20,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "SupportPartitionedComponentsInNonPartitionedLevels",
    comment: "Supporting partitioned components in non-partitioned levels",
    value: 21,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "NoMoreSpatialDataConversionToPointDataByDefaultOnNonPointPins",
    comment: "New gate for new data, so any node that has a non Point pin don't do any ToPointData by default.",
    value: 22,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "AttributesAndTagsCanContainSpaces",
    comment: "Attributes and tags can now contain spaces and will no longer be parsed by spaces.",
    value: 23,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "MultiLevelMetadata",
    comment: "Multi Domain Metadata",
    value: 24,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "AttributePropertySelectorDeprecatePointProperties",
    comment: "Refactor of the Attribute Property selector to deprecate point properties and support any property.",
    value: 25,
    firstAppearance: "5.6.0",
  }),
];

export const FPCGCustomVersionGuid = new CustomVersionGuid<FPCGCustomVersion>({
  friendlyName: "PCGBaseVer",
  guid: FGuid.fromComponents(0x2763920d, 0x0f784b39, 0x986e4bb3, 0xa88d666d),
  details: FPCGCustomVersionDetails,
});
