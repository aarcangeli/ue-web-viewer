// This file is generated by `extract_custom_versions.py`.
// Do not edit manually.
// noinspection JSUnusedGlobalSymbols
//

import { VersionDetails, CustomVersionGuid } from "../CustomVersionGuid";
import { FGuid } from "../../modules/CoreUObject/structs/Guid";

export enum FEngineNetworkCustomVersion {
  // region Introduced with UE 5.2.0
  /// Before any version changes were made
  BeforeCustomVersionWasAdded = 0,
  /// Original replay versions from ENetworkVersionHistory
  Initial = 1,
  ReplayBackwardsCompat = 2,
  /// Bump version to get rid of older replays before backwards compat was turned on officially
  MaxActorChannelsCustomization = 3,
  /// Bump version because serialization of the actor channels changed
  RepCmdChecksumRemovePrintf = 4,
  /// Bump version since the way FRepLayoutCmd::CompatibleChecksum was calculated changed due to an optimization
  NewActorOverrideLevel = 5,
  /// Bump version since a level reference was added to the new actor information
  ChannelNames = 6,
  /// Bump version since channel type is now an fname
  ChannelCloseReason = 7,
  /// Bump version to serialize a channel close reason in bunches instead of bDormant
  AcksIncludedInHeader = 8,
  /// Bump version since acks are now sent as part of the header
  NetExportSerialization = 9,
  /// Bump version due to serialization change to FNetFieldExport
  NetExportSerializeFix = 10,
  /// Bump version to fix net field export name serialization
  FastArrayDeltaStruct = 11,
  /// Bump version to allow fast array serialization, delta struct serialization.
  FixEnumSerialization = 12,
  /// Bump version to fix enum net serialization issues.
  OptionallyQuantizeSpawnInfo = 13,
  /// Bump version to conditionally disable quantization for Scale, Location, and Velocity when spawning network actors.
  JitterInHeader = 14,
  /// Bump version since we added jitter clock time to packet headers and removed remote saturation
  ClassNetCacheFullName = 15,
  /// Bump version to use full paths in GetNetFieldExportGroupForClassNetCache
  ReplayDormancy = 16,
  /// Bump version to support dormancy properly in replays
  EnumSerializationCompat = 17,
  /// Bump version to include enum bits required for serialization into compat checksums, as well as unify enum and byte property enum serialization
  SubObjectOuterChain = 18,
  /// Bump version to support subobject outer chains matching on client and server
  HitResultInstanceHandle = 19,
  /// Bump version to support FHitResult change of Actor to HitObjectHandle. This change was made in CL 14369221 but a net version wasn't added at the time.
  InterfacePropertySerialization = 20,
  /// Bump version to support net serialization of FInterfaceProperty
  MontagePlayInstIdSerialization = 21,
  /// Bump version to support net serialization of FGameplayAbilityRepAnimMontage, addition of PlayInstanceId and removal of bForcePlayBit
  SerializeDoubleVectorsAsDoubles = 22,
  /// Bump version to support net serialization of double vector types
  PackedVectorLWCSupport = 23,
  /// Bump version to support quantized LWC FVector net serialization
  PawnRemoteViewPitch = 24,
  /// Bump version to support serialization changes to RemoteViewPitch
  RepMoveServerFrameAndHandle = 25,
  /// Bump version to support serialization changes to RepMove so we can get the serverframe and physics handle associated with the object
  Ver21AndViewPitchOnly_DONOTUSE = 26,
  /// Bump version to support up to history 21 + PawnRemoteViewPitch.  DO NOT USE!!!
  Placeholder = 27,
  /// Bump version to a placeholder.  This version is the same as RepMoveServerFrameAndHandle
  RuntimeFeaturesCompatibility = 28,
  /// Bump version to add network runtime feature compatibility test to handshake (hello/upgrade) control messages
  SoftObjectPtrNetGuids = 29,
  /// Bump version to support replicating SoftObjectPtrs by NetGuid instead of raw strings.
  SubObjectDestroyFlag = 30,
  /// Bump version to support subobject destruction message flags
  GameStateReplicatedTimeAsDouble = 31,
  /// Bump version to support AGameStateBase::ReplicatedWorldTimeSeconds as double instead of float.
  CustomVersions = 32,
  // endregion

  // region Introduced with UE 5.4.0
  /// Bump version to switch to using custom versions
  DynamicMontageSerialization = 33,
  /// Bump version to support dynamic montage serialization in the Gameplay Ability System
  PredictionKeyBaseNotReplicated = 34,
  // endregion

  // region Introduced with UE 5.5.0
  /// Bump version to stop FPredictionKey::Base from being replicated (it was unused).
  RepMoveOptionalAcceleration = 35,
  /// Bump version to support serialization changes to RepMove for optional Acceleration
  CustomExports = 36,
  // endregion

  // region Introduced with UE 5.6.0
  /// Bump version to support CustomExports (such as NetTokens used for supporting "Dynamic Replication" of GameplayTags -- see FGameplayTag::NetSerialize_Packed)		// -----<new versions can be added above this line>-------------------------------------------------
  MontagePlayCountSerialization = 37,
  /// Bump version to support serialization changes for dynamic montage play count
  RemoteObjectReferences = 38,
  /// Bump version to support serialization changes for remote object references
  BeaconNetIDVariant = 39,
  /// Bump version for online beacon's BeaconAssignGUID control message switching to use FNetIDVariant
  JoinNoPawn = 40,
  /// Bump version to support NMT_JoinNoPawn and NMT_JoinNoPawnSplit control messages.
  ClientHandshakeId = 41,
  /// Bump version to support serialization of APlayerController::ClientHandeshakeId.
  PawnRemoteViewPitchTo16Bit = 42,
  // endregion
}

export const FEngineNetworkCustomVersionDetails: VersionDetails[] = [
  new VersionDetails({
    name: "BeforeCustomVersionWasAdded",
    comment: "Before any version changes were made",
    value: 0,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "Initial",
    comment: "Original replay versions from ENetworkVersionHistory",
    value: 1,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "ReplayBackwardsCompat",
    value: 2,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "MaxActorChannelsCustomization",
    comment: "Bump version to get rid of older replays before backwards compat was turned on officially",
    value: 3,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RepCmdChecksumRemovePrintf",
    comment: "Bump version because serialization of the actor channels changed",
    value: 4,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "NewActorOverrideLevel",
    comment:
      "Bump version since the way FRepLayoutCmd::CompatibleChecksum was calculated changed due to an optimization",
    value: 5,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "ChannelNames",
    comment: "Bump version since a level reference was added to the new actor information",
    value: 6,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "ChannelCloseReason",
    comment: "Bump version since channel type is now an fname",
    value: 7,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "AcksIncludedInHeader",
    comment: "Bump version to serialize a channel close reason in bunches instead of bDormant",
    value: 8,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "NetExportSerialization",
    comment: "Bump version since acks are now sent as part of the header",
    value: 9,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "NetExportSerializeFix",
    comment: "Bump version due to serialization change to FNetFieldExport",
    value: 10,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "FastArrayDeltaStruct",
    comment: "Bump version to fix net field export name serialization ",
    value: 11,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "FixEnumSerialization",
    comment: "Bump version to allow fast array serialization, delta struct serialization.",
    value: 12,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "OptionallyQuantizeSpawnInfo",
    comment: "Bump version to fix enum net serialization issues.",
    value: 13,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "JitterInHeader",
    comment:
      "Bump version to conditionally disable quantization for Scale, Location, and Velocity when spawning network actors.",
    value: 14,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "ClassNetCacheFullName",
    comment: "Bump version since we added jitter clock time to packet headers and removed remote saturation",
    value: 15,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "ReplayDormancy",
    comment: "Bump version to use full paths in GetNetFieldExportGroupForClassNetCache",
    value: 16,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "EnumSerializationCompat",
    comment: "Bump version to support dormancy properly in replays",
    value: 17,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SubObjectOuterChain",
    comment:
      "Bump version to include enum bits required for serialization into compat checksums, as well as unify enum and byte property enum serialization",
    value: 18,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "HitResultInstanceHandle",
    comment: "Bump version to support subobject outer chains matching on client and server",
    value: 19,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "InterfacePropertySerialization",
    comment:
      "Bump version to support FHitResult change of Actor to HitObjectHandle. This change was made in CL 14369221 but a net version wasn't added at the time.",
    value: 20,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "MontagePlayInstIdSerialization",
    comment: "Bump version to support net serialization of FInterfaceProperty",
    value: 21,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SerializeDoubleVectorsAsDoubles",
    comment:
      "Bump version to support net serialization of FGameplayAbilityRepAnimMontage, addition of PlayInstanceId and removal of bForcePlayBit",
    value: 22,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "PackedVectorLWCSupport",
    comment: "Bump version to support net serialization of double vector types",
    value: 23,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "PawnRemoteViewPitch",
    comment: "Bump version to support quantized LWC FVector net serialization",
    value: 24,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RepMoveServerFrameAndHandle",
    comment: "Bump version to support serialization changes to RemoteViewPitch",
    value: 25,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "Ver21AndViewPitchOnly_DONOTUSE",
    comment:
      "Bump version to support serialization changes to RepMove so we can get the serverframe and physics handle associated with the object",
    value: 26,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "Placeholder",
    comment: "Bump version to support up to history 21 + PawnRemoteViewPitch.  DO NOT USE!!!",
    value: 27,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "RuntimeFeaturesCompatibility",
    comment: "Bump version to a placeholder.  This version is the same as RepMoveServerFrameAndHandle",
    value: 28,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SoftObjectPtrNetGuids",
    comment:
      "Bump version to add network runtime feature compatibility test to handshake (hello/upgrade) control messages",
    value: 29,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "SubObjectDestroyFlag",
    comment: "Bump version to support replicating SoftObjectPtrs by NetGuid instead of raw strings.",
    value: 30,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "GameStateReplicatedTimeAsDouble",
    comment: "Bump version to support subobject destruction message flags",
    value: 31,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "CustomVersions",
    comment: "Bump version to support AGameStateBase::ReplicatedWorldTimeSeconds as double instead of float.",
    value: 32,
    firstAppearance: "5.2.0",
  }),
  new VersionDetails({
    name: "DynamicMontageSerialization",
    comment: "Bump version to switch to using custom versions",
    value: 33,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "PredictionKeyBaseNotReplicated",
    comment: "Bump version to support dynamic montage serialization in the Gameplay Ability System",
    value: 34,
    firstAppearance: "5.4.0",
  }),
  new VersionDetails({
    name: "RepMoveOptionalAcceleration",
    comment: "Bump version to stop FPredictionKey::Base from being replicated (it was unused).",
    value: 35,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "CustomExports",
    comment: "Bump version to support serialization changes to RepMove for optional Acceleration",
    value: 36,
    firstAppearance: "5.5.0",
  }),
  new VersionDetails({
    name: "MontagePlayCountSerialization",
    comment:
      'Bump version to support CustomExports (such as NetTokens used for supporting "Dynamic Replication" of GameplayTags -- see FGameplayTag::NetSerialize_Packed)		// -----<new versions can be added above this line>-------------------------------------------------',
    value: 37,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "RemoteObjectReferences",
    comment: "Bump version to support serialization changes for dynamic montage play count ",
    value: 38,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "BeaconNetIDVariant",
    comment: "Bump version to support serialization changes for remote object references ",
    value: 39,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "JoinNoPawn",
    comment: "Bump version for online beacon's BeaconAssignGUID control message switching to use FNetIDVariant",
    value: 40,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "ClientHandshakeId",
    comment: "Bump version to support NMT_JoinNoPawn and NMT_JoinNoPawnSplit control messages.",
    value: 41,
    firstAppearance: "5.6.0",
  }),
  new VersionDetails({
    name: "PawnRemoteViewPitchTo16Bit",
    comment: "Bump version to support serialization of APlayerController::ClientHandeshakeId.",
    value: 42,
    firstAppearance: "5.6.0",
  }),
];

export const FEngineNetworkCustomVersionGuid = new CustomVersionGuid<FEngineNetworkCustomVersion>({
  friendlyName: "EngineNetworkVersion",
  guid: __INVALID_GUID__,
  details: FEngineNetworkCustomVersionDetails,
});
