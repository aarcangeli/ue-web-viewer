// This file is auto-generated, do not edit directly.

import type { ECompositeTextureMode } from "./ECompositeTextureMode";
import type { ETextureAvailability } from "./ETextureAvailability";
import type { ETextureCompressionQuality } from "./ETextureCompressionQuality";
import type { ETextureDownscaleOptions } from "./ETextureDownscaleOptions";
import type { ETextureLossyCompressionAmount } from "./ETextureLossyCompressionAmount";
import type { ETextureMipLoadOptions } from "./ETextureMipLoadOptions";
import type { ETexturePowerOfTwoSetting } from "./ETexturePowerOfTwoSetting";
import type { EVTProducerPriority } from "../RenderCore/EVTProducerPriority";
import type { FColor } from "../CoreUObject/Color";
import type { FGuid } from "../CoreUObject/Guid";
import type { FPerPlatformFloat } from "../CoreUObject/PerPlatformFloat";
import type { FTextureFormatSettings } from "./TextureFormatSettings";
import type { FTextureSource } from "./TextureSource";
import type { FTextureSourceColorSettings } from "./TextureSourceColorSettings";
import type { FVector4 } from "../CoreUObject/Vector4";
import type { TextureCompressionSettings } from "./TextureCompressionSettings";
import type { TextureCookPlatformTilingSettings } from "./TextureCookPlatformTilingSettings";
import type { TextureFilter } from "./TextureFilter";
import type { TextureGroup } from "./TextureGroup";
import type { TextureMipGenSettings } from "./TextureMipGenSettings";
import type { UAssetImportData } from "./AssetImportData";
import type { UAssetUserData } from "./AssetUserData";
import type { UStreamableRenderAsset } from "./StreamableRenderAsset";

export interface UTexture extends UStreamableRenderAsset {
  Source: FTextureSource;
  LightingGuid: FGuid;
  SourceFilePath: string;
  AssetImportData: UAssetImportData;
  AdjustBrightness: number;
  AdjustBrightnessCurve: number;
  AdjustVibrance: number;
  AdjustSaturation: number;
  AdjustRGBCurve: number;
  AdjustHue: number;
  AdjustMinAlpha: number;
  AdjustMaxAlpha: number;
  CompressionNoAlpha: boolean;
  CompressionForceAlpha: boolean;
  CompressionNone: boolean;
  LossyCompressionAmount: ETextureLossyCompressionAmount;
  OodleTextureSdkVersion: string;
  MaxTextureSize: number;
  CompressionQuality: ETextureCompressionQuality;
  CompressionCacheId: FGuid;
  bDitherMipMapAlpha: boolean;
  bDoScaleMipsForAlphaCoverage: boolean;
  AlphaCoverageThresholds: FVector4;
  bUseNewMipFilter: boolean;
  bPreserveBorder: boolean;
  bFlipGreenChannel: boolean;
  PowerOfTwoMode: ETexturePowerOfTwoSetting;
  PaddingColor: FColor;
  bPadWithBorderColor: boolean;
  ResizeDuringBuildX: number;
  ResizeDuringBuildY: number;
  bChromaKeyTexture: boolean;
  ChromaKeyThreshold: number;
  ChromaKeyColor: FColor;
  MipGenSettings: TextureMipGenSettings;
  CompositeTexture: UTexture;
  CompositeTextureMode: ECompositeTextureMode;
  CompositePower: number;
  LayerFormatSettings: Array<FTextureFormatSettings>;
  LODBias: number;
  CompressionSettings: TextureCompressionSettings;
  Filter: TextureFilter;
  MipLoadOptions: ETextureMipLoadOptions;
  VirtualTextureStreamingPriority: EVTProducerPriority;
  VirtualTexturePrefetchMips: number;
  CookPlatformTilingSettings: TextureCookPlatformTilingSettings;
  bOodlePreserveExtremes: boolean;
  LODGroup: TextureGroup;
  Downscale: FPerPlatformFloat;
  DownscaleOptions: ETextureDownscaleOptions;
  Availability: ETextureAvailability;
  SRGB: boolean;
  bNormalizeNormals: boolean;
  bUseLegacyGamma: boolean;
  SourceColorSettings: FTextureSourceColorSettings;
  bNoTiling: boolean;
  VirtualTextureStreaming: boolean;
  bUseVirtualTextureStreamingPriority: boolean;
  CompressionYCoCg: boolean;
  AssetUserData: Array<UAssetUserData>;
}
